/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package planetprogrammig;

import Utils.CustomJTree;
import Utils.Node;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author kevin2
 */
public class VtnAyuda extends javax.swing.JDialog {

    private final CustomJTree tree = new CustomJTree();

    private void loadProyect() {

        Node package1 = new Node(Utils.TypeFile.PACKAGE, "Interfaces");
        package1.addChild(new Node(Utils.TypeFile.CLASS, "Inode.jey"));

        Node package2 = new Node(Utils.TypeFile.PACKAGE, "Resources");
        Node package22 = new Node(Utils.TypeFile.PACKAGE, "Img");
        package22.addChild(new Node(Utils.TypeFile.IMAGE, "BuildPackage.png"));
        package22.addChild(new Node(Utils.TypeFile.IMAGE, "class.png"));
        package22.addChild(new Node(Utils.TypeFile.IMAGE, "CodesPackage.png"));
        package22.addChild(new Node(Utils.TypeFile.IMAGE, "Configuration.png"));
        package2.addChild(package22);

        Node package3 = new Node(Utils.TypeFile.PACKAGE, "Utils");
        package3.addChild(new Node(Utils.TypeFile.CLASS, "CustomJtree.jey"));
        package3.addChild(new Node(Utils.TypeFile.CLASS, "Node.jey"));
        package3.addChild(new Node(Utils.TypeFile.CLASS, "Project.jey"));
        package3.addChild(new Node(Utils.TypeFile.CLASS, "TypeFile.jey"));

        Node package4 = new Node(Utils.TypeFile.PACKAGE, "View");
        package4.addChild(new Node(Utils.TypeFile.CLASS, "Frame.jey"));

        Node packageSource = new Node(Utils.TypeFile.FOLDER_SOURCE, "Source Packages");
        packageSource.addChilds(package1, package2, package3, package4);

        Node packageBuild = new Node(Utils.TypeFile.FOLDER_BUILD, "output");
        packageBuild.addChild(new Node(Utils.TypeFile.COMPILED_CLASS, "Node.out"));

        Node project = new Node(Utils.TypeFile.PROYECT, "CustomJTre");
        project.addChilds(packageSource, packageBuild);
        tree.loadNewProyect(project);
    }

    /**
     * Creates new form Ayuda
     *
     * @param parent designa a quien esta heredando la ventana
     * @param modal es un booleano que dice que si se mueve el cursor a otra
     * parte este tendra que cerrarse esta ventana para que se pueda ver otra
     * parte
     */
    public VtnAyuda(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setTitle("Ayuda");
        Image icono = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("imagenes/planetUrano.png"));
        this.setIconImage(icono);
        setLocationRelativeTo(parent);
        setResizable(false);
        loadProyect();
        tree.setBounds(0, 0, jPanel2.getWidth(), jPanel2.getHeight());
        jPanel2.add(tree);
        iniciarModelo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        panel1 = new org.edisoncor.gui.panel.Panel();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();

        jFileChooser1.setFileSelectionMode(javax.swing.JFileChooser.FILES_AND_DIRECTORIES);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(0, 102, 102));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Crear capeta");
        jTree1.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jScrollPane1.setViewportView(jTree1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                .addGap(487, 487, 487))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panel1.setColorPrimario(new java.awt.Color(0, 102, 102));
        panel1.setColorSecundario(new java.awt.Color(0, 102, 102));

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/17821 - home house.png"))); // NOI18N
        jButton3.setToolTipText("Inicio");
        jButton3.setBorderPainted(false);
        jButton3.setContentAreaFilled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 167, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 422, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int seleccion = 0;
        jFileChooser1.showOpenDialog(null);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File fichero = jFileChooser1.getSelectedFile();
            actualizar(fichero);
        } else {
            System.out.println("No se selecciono nada");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VtnAyuda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VtnAyuda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VtnAyuda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VtnAyuda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VtnAyuda dialog = new VtnAyuda(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton3;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTree jTree1;
    private org.edisoncor.gui.panel.Panel panel1;
    // End of variables declaration//GEN-END:variables
private DefaultTreeModel modelo;
    private DefaultMutableTreeNode root;

    private void actualizar(File fichero) {
        //  root = new DefaultMutableTreeNode(fichero.getName());
        Node cat2 = new Node(Utils.TypeFile.PROYECT, fichero.getName());
        root = new DefaultMutableTreeNode(cat2);
        modelo = new DefaultTreeModel(root);
        crea(root, fichero);
        jTree1.setModel(modelo);
    }

    private void iniciarModelo() {

        root = new DefaultMutableTreeNode("Raiz");
        modelo = new DefaultTreeModel(root);
        Node cat1 = new Node(Utils.TypeFile.PROYECT, "Categoria 1");
        Node cat2 = new Node(Utils.TypeFile.PROYECT, "Categoria 2");

        DefaultMutableTreeNode hijo1 = new DefaultMutableTreeNode(cat1);
        DefaultMutableTreeNode hijo2 = new DefaultMutableTreeNode(cat2);
        modelo.insertNodeInto(hijo1, root, 0);
        modelo.insertNodeInto(hijo2, root, 1);

        jTree1.setModel(modelo);
        jTree1.setCellRenderer(tree);
    }

    private void crea(DefaultMutableTreeNode root, File fichero) {
        File[] archivos = fichero.listFiles();
        if (archivos != null) {
            int contador = 0;
            for (File f : archivos) {

                if (f.isFile()) {
                    if (f.getName().contains(".java")) {
                        Node cat2 = new Node(Utils.TypeFile.CLASS, f.getName());
                        DefaultMutableTreeNode hijo = new DefaultMutableTreeNode(cat2);
                        //DefaultMutableTreeNode hijo = new DefaultMutableTreeNode(f.getName());
                        modelo.insertNodeInto(hijo, root, contador);
                        contador++;
                    } else if (f.getName().contains(".png") || f.getName().contains(".jpg")) {
                        Node cat2 = new Node(Utils.TypeFile.IMAGE, f.getName());
                        DefaultMutableTreeNode hijo = new DefaultMutableTreeNode(cat2);
                        //DefaultMutableTreeNode hijo = new DefaultMutableTreeNode(f.getName());
                        modelo.insertNodeInto(hijo, root, contador);
                        contador++;
                    } else if (f.getName().contains(".word")) {
                        Node cat2 = new Node(Utils.TypeFile.COMPILED_CLASS, f.getName());
                        DefaultMutableTreeNode hijo = new DefaultMutableTreeNode(cat2);
                        //DefaultMutableTreeNode hijo = new DefaultMutableTreeNode(f.getName());
                        modelo.insertNodeInto(hijo, root, contador);
                        contador++;
                    } else {
                        Node cat2 = new Node(Utils.TypeFile.CLASS, f.getName());
                        DefaultMutableTreeNode hijo = new DefaultMutableTreeNode(cat2);
                        //DefaultMutableTreeNode hijo = new DefaultMutableTreeNode(f.getName());
                        modelo.insertNodeInto(hijo, root, contador);
                        contador++;
                    }

                } else if (f.isDirectory()) {
                    if (f.getName().equals("Source Package")) {
                        Node cat2 = new Node(Utils.TypeFile.FOLDER_BUILD, f.getName());
                        DefaultMutableTreeNode hijo = new DefaultMutableTreeNode(cat2);
                        //DefaultMutableTreeNode hijo = new DefaultMutableTreeNode(f.getName());
                        modelo.insertNodeInto(hijo, root, contador);
                        contador++;
                          crea(hijo, f);
                    } else if (f.getName().equals("Libraries")) {
                        Node cat2 = new Node(Utils.TypeFile.PACKAGE, f.getName());
                        DefaultMutableTreeNode hijo = new DefaultMutableTreeNode(cat2);
                        //DefaultMutableTreeNode hijo = new DefaultMutableTreeNode(f.getName());
                        modelo.insertNodeInto(hijo, root, contador);
                        contador++;
                          crea(hijo, f);
                    } else {
                        Node cat2 = new Node(Utils.TypeFile.FOLDER_SOURCE, f.getName());
                        DefaultMutableTreeNode hijo = new DefaultMutableTreeNode(cat2);
                        //DefaultMutableTreeNode hijo = new DefaultMutableTreeNode(f.getName());
                        modelo.insertNodeInto(hijo, root, contador);
                        contador++;
                        crea(hijo, f);
                    }

                }
            }
        }
    }
}
